At line no: 1: type_specifier : INT 

int

At line no: 1: type_specifier : INT 

int

At line no: 1 parameter_list  : type_specifier ID

int a

New ScopeTable with id 1.1 created

Line 2: factor : CONST_INT

2

Line 2: unary_expression :	factor

2

Line 2: term :	unary_expression

2

Line 2: variable : ID
a

Line 2: factor : variable

a

Line 2: unary_expression :	factor

a

Line 2: term : term MULOP unary_expression

2*a

Line 2: simple_expression : term

T1

Line 2: rel_expression	: simple_expression

T1

Line 2: logic_expression : rel_expression

T1

Line 2: expression : logic_expression

T1

Line 2: statement : RETURN expression SEMICOLON

return T1;

At line no: 2 statements : statement

return

Line 3: variable : ID
a

Line 3: factor : CONST_INT

9

Line 3: unary_expression :	factor

9

Line 3: term :	unary_expression

9

Line 3: simple_expression : term

9

Line 3: rel_expression	: simple_expression

9

Line 3: logic_expression : rel_expression

9

Line 3: expression : variable ASSIGNOP logic_expression

a = 9

Line 3: expression_statement : expression SEMICOLON

a1;

At line no: 3 statement : expression_statement

a1

At line no: 3 statements : statements statement

return a1


At line no: 4 compound_statement : LCURL statements RCURL

{
returna1

}

ScopeTable # 1.1
7 --> < a : ID >

ScopeTable # 1
12 --> < f : ID >

ScopeTable with id 1.1 removed

Line 4: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

int f(int a)returna1


Line 4: unit : func_definition

int f(int a)returna1



Line 4: program : unit

int f(int a)returna1



At line no: 6: type_specifier : INT 

int

At line no: 6: type_specifier : INT 

int

At line no: 6 parameter_list  : type_specifier ID

int a

At line no: 6: type_specifier : INT 

int

At line no: 6 parameter_list  : parameter_list COMMA type_specifier ID

int a , int b

New ScopeTable with id 1.2 created

At line no: 7: type_specifier : INT 

int

At line no: 7 declaration_list : ID

x

At line no: 7 var_declaration : type_specifier declaration_list SEMICOLON

int x;

At line no: 7 statement : var_declaration

int x;

At line no: 7 statements : statement

int x;


Line 8: variable : ID
x

Line 8: variable : ID
a

Line 8: factor : variable

a

Line 8: unary_expression :	factor

a

Line 8: term :	unary_expression

a

Line 8: simple_expression : term

a

Line 8: rel_expression	: simple_expression

a

Line 8: logic_expression : rel_expression

a

At line no: 8 arguments : logic_expression

a

Line 8: argument_list : arguments

a

Line 8: factor : ID LPAREN argument_list RPAREN

f(a)

Line 8: unary_expression :	factor

f(a)

Line 8: term :	unary_expression

f(a)

Line 8: simple_expression : term

f(a)

Line 8: variable : ID
a

Line 8: factor : variable

a

Line 8: unary_expression :	factor

a

Line 8: term :	unary_expression

a

Line 8: simple_expression : simple_expression ADDOP term

f(a)+a

Line 8: variable : ID
b

Line 8: factor : variable

b

Line 8: unary_expression :	factor

b

Line 8: term :	unary_expression

b

Line 8: simple_expression : simple_expression ADDOP term

T2+b

Line 8: rel_expression	: simple_expression

T3

Line 8: logic_expression : rel_expression

T3

Line 8: expression : variable ASSIGNOP logic_expression

x = T3

Line 8: expression_statement : expression SEMICOLON

x1;

At line no: 8 statement : expression_statement

x1

At line no: 8 statements : statements statement

int x;
 x1


Line 9: variable : ID
x

Line 9: factor : variable

x

Line 9: unary_expression :	factor

x

Line 9: term :	unary_expression

x

Line 9: simple_expression : term

x

Line 9: rel_expression	: simple_expression

x

Line 9: logic_expression : rel_expression

x

Line 9: expression : logic_expression

x

Line 9: statement : RETURN expression SEMICOLON

return x;

At line no: 9 statements : statements statement

int x;
x1
 return

At line no: 10 compound_statement : LCURL statements RCURL

{
int x;
x1
return
}

ScopeTable # 1.2
0 --> < x : ID >
7 --> < a : ID >
8 --> < b : ID >

ScopeTable # 1
12 --> < f : ID >
13 --> < g : ID >

ScopeTable with id 1.2 removed

Line 10: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

int g(int a,int b)int x;
x1
return

Line 10: unit : func_definition

int g(int a,int b)int x;
x1
return


Line 10:  program : program unit

int f(int a)returna1


int g(int a,int b)int x;
x1
return



At line no: 12: type_specifier : INT 

int

New ScopeTable with id 1.3 created

At line no: 13: type_specifier : INT 

int

At line no: 13 declaration_list : ID

a

At line no: 13: declaration_list : declaration_list COMMA ID

a,b

At line no: 13 var_declaration : type_specifier declaration_list SEMICOLON

int a,b;

At line no: 13 statement : var_declaration

int a,b;

At line no: 13 statements : statement

int a,b;


Line 14: variable : ID
a

Line 14: factor : CONST_INT

1

Line 14: unary_expression :	factor

1

Line 14: term :	unary_expression

1

Line 14: simple_expression : term

1

Line 14: rel_expression	: simple_expression

1

Line 14: logic_expression : rel_expression

1

Line 14: expression : variable ASSIGNOP logic_expression

a = 1

Line 14: expression_statement : expression SEMICOLON

a1;

At line no: 14 statement : expression_statement

a1

At line no: 14 statements : statements statement

int a,b;
 a1


Line 15: variable : ID
b

Line 15: factor : CONST_INT

2

Line 15: unary_expression :	factor

2

Line 15: term :	unary_expression

2

Line 15: simple_expression : term

2

Line 15: rel_expression	: simple_expression

2

Line 15: logic_expression : rel_expression

2

Line 15: expression : variable ASSIGNOP logic_expression

b = 2

Line 15: expression_statement : expression SEMICOLON

b1;

At line no: 15 statement : expression_statement

b1

At line no: 15 statements : statements statement

int a,b;
a1
 b1


Line 16: variable : ID
a

Line 16: variable : ID
a

Line 16: factor : variable

a

Line 16: unary_expression :	factor

a

Line 16: term :	unary_expression

a

Line 16: simple_expression : term

a

Line 16: rel_expression	: simple_expression

a

Line 16: logic_expression : rel_expression

a

At line no: 16 arguments : logic_expression

a

Line 16: variable : ID
b

Line 16: factor : variable

b

Line 16: unary_expression :	factor

b

Line 16: term :	unary_expression

b

Line 16: simple_expression : term

b

Line 16: rel_expression	: simple_expression

b

Line 16: logic_expression : rel_expression

b

Line 16: arguments : arguments COMMA logic_expression

a , b

Line 16: argument_list : arguments

a , b

Line 16: factor : ID LPAREN argument_list RPAREN

g(a , b)

Line 16: unary_expression :	factor

g(a , b)

Line 16: term :	unary_expression

g(a , b)

Line 16: simple_expression : term

g(a , b)

Line 16: rel_expression	: simple_expression

g(a , b)

Line 16: logic_expression : rel_expression

g(a , b)

Line 16: expression : variable ASSIGNOP logic_expression

a = g(a , b)

Line 16: expression_statement : expression SEMICOLON

a1;

At line no: 16 statement : expression_statement

a1

At line no: 16 statements : statements statement

int a,b;
a1
b1
 a1


Line 17: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(a);

At line no: 17 statements : statements statement

int a,b;
a1
b1
a1
 println

Line 18: factor : CONST_INT

0

Line 18: unary_expression :	factor

0

Line 18: term :	unary_expression

0

Line 18: simple_expression : term

0

Line 18: rel_expression	: simple_expression

0

Line 18: logic_expression : rel_expression

0

Line 18: expression : logic_expression

0

Line 18: statement : RETURN expression SEMICOLON

return 0;

At line no: 18 statements : statements statement

int a,b;
a1
b1
a1
println return

At line no: 19 compound_statement : LCURL statements RCURL

{
int a,b;
a1
b1
a1
printlnreturn
}

ScopeTable # 1.3
7 --> < a : ID >
8 --> < b : ID >

ScopeTable # 1
1 --> < main : ID >
12 --> < f : ID >
13 --> < g : ID >

ScopeTable with id 1.3 removed

Line 19: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main()int a,b;
a1
b1
a1
printlnreturn

Line 19: unit : func_definition

int main()int a,b;
a1
b1
a1
printlnreturn


Line 19:  program : program unit

int f(int a)returna1


int g(int a,int b)int x;
x1
return

int main()int a,b;
a1
b1
a1
printlnreturn



		Symbol Table : 

ScopeTable # 1
1 --> < main : ID >
12 --> < f : ID >
13 --> < g : ID >

Total Lines : 20 

Total Errors : 0 

