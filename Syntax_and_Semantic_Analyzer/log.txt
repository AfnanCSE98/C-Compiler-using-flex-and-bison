At line no: 1: type_specifier : INT 

int

New ScopeTable with id 1.1 created
At line no: 2: type_specifier : INT 

int

At line no 2:  declaration_list: ID LTHIRD CONST_INT RTHIRD

a[2]

At line no: 2: declaration_list : declaration_list COMMA ID

a[2],c

At line no: 2: declaration_list : declaration_list COMMA ID

a[2],c,i

At line no: 2: declaration_list : declaration_list COMMA ID

a[2],c,i,j

At line no: 2 var_declaration : type_specifier declaration_list SEMICOLON

int a[2],c,i,j;

At line no 2: statement : var_declaration

int a[2],c,i,j;

At line no 2: statements : statement

int a[2],c,i,j;


At line no: 2: type_specifier : FLOAT 
float

At line no 2: declaration_list : ID

d

At line no: 2 var_declaration : type_specifier declaration_list SEMICOLON

float d;

At line no 2: statement : var_declaration

float d;

At line no 2: statements : statements statement

int a[2],c,i,j;
 float d;


At line no 3: factor : CONST_INT

0

At line no 3: unary_expression :	factor

0

At line no 3: term :	unary_expression

0

At line no 3: simple_expression : term

0

At line no 3: rel_expression	: simple_expression

0

At line no 3: logic_expression : rel_expression

0

At line no 3: expression : logic_expression

0

At line no 3: variable : ID LTHIRD expression RTHIRD
a[0]

At line no 3: factor : CONST_INT

1

At line no 3: unary_expression :	factor

1

At line no 3: term :	unary_expression

1

At line no 3: simple_expression : term

1

At line no 3: rel_expression	: simple_expression

1

At line no 3: logic_expression : rel_expression

1

At line no 3: expression : variable ASSIGNOP logic_expression

a[0] = 1

At line no 3: expression_statement : expression SEMICOLON

a[0]=1;

At line no 3: statement : expression_statement

a[0]=1;

At line no 3: statements : statements statement

int a[2],c,i,j;
float d;
 a[0]=1;


At line no 4: factor : CONST_INT

1

At line no 4: unary_expression :	factor

1

At line no 4: term :	unary_expression

1

At line no 4: simple_expression : term

1

At line no 4: rel_expression	: simple_expression

1

At line no 4: logic_expression : rel_expression

1

At line no 4: expression : logic_expression

1

At line no 4: variable : ID LTHIRD expression RTHIRD
a[1]

At line no 4: factor : CONST_INT

5

At line no 4: unary_expression :	factor

5

At line no 4: term :	unary_expression

5

At line no 4: simple_expression : term

5

At line no 4: rel_expression	: simple_expression

5

At line no 4: logic_expression : rel_expression

5

At line no 4: expression : variable ASSIGNOP logic_expression

a[1] = 5

At line no 4: expression_statement : expression SEMICOLON

a[1]=5;

At line no 4: statement : expression_statement

a[1]=5;

At line no 4: statements : statements statement

int a[2],c,i,j;
float d;
a[0]=1;
 a[1]=5;


At line no. 5: variable : ID
i

At line no 5: factor : CONST_INT

0

At line no 5: unary_expression :	factor

0

At line no 5: term :	unary_expression

0

At line no 5: simple_expression : term

0

At line no 5: rel_expression	: simple_expression

0

At line no 5: logic_expression : rel_expression

0

At line no 5: expression : logic_expression

0

At line no 5: variable : ID LTHIRD expression RTHIRD
a[0]

At line no 5: factor : variable

a[0]

At line no 5: unary_expression :	factor

a[0]

At line no 5: term :	unary_expression

a[0]

At line no 5: simple_expression : term

a[0]

At line no 5: factor : CONST_INT

1

At line no 5: unary_expression :	factor

1

At line no 5: term :	unary_expression

1

At line no 5: simple_expression : term

1

At line no 5: rel_expression	: simple_expression

1

At line no 5: logic_expression : rel_expression

1

At line no 5: expression : logic_expression

1

At line no 5: variable : ID LTHIRD expression RTHIRD
a[1]

At line no 5: factor : variable

a[1]

At line no 5: unary_expression :	factor

a[1]

At line no 5: term :	unary_expression

a[1]

At line no 5: simple_expression : simple_expression ADDOP term

a[0]+a[1]

At line no 5: rel_expression	: simple_expression

a[0]+a[1]

At line no 5: logic_expression : rel_expression

a[0]+a[1]

At line no 5: expression : variable ASSIGNOP logic_expression

i = a[0]+a[1]

At line no 5: expression_statement : expression SEMICOLON

i=a[0]+a[1];

At line no 5: statement : expression_statement

i=a[0]+a[1];

At line no 5: statements : statements statement

int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
 i=a[0]+a[1];


At line no. 6: variable : ID
j

At line no 6: factor : CONST_INT

2

At line no 6: unary_expression :	factor

2

At line no 6: term :	unary_expression

2

At line no 6: factor : CONST_INT

3

At line no 6: unary_expression :	factor

3

At line no 6: term : term MULOP unary_expression

2*3

At line no 6: simple_expression : term

2*3

At line no 6: factor : CONST_INT

5

At line no 6: unary_expression :	factor

5

At line no 6: term :	unary_expression

5

At line no 6: factor : CONST_INT

3

At line no 6: unary_expression :	factor

3

At line no 6: term : term MULOP unary_expression

5%3

At line no 6: simple_expression : term

5%3

At line no 6: factor : CONST_INT

4

At line no 6: unary_expression :	factor

4

At line no 6: term :	unary_expression

4

At line no 6: simple_expression : term

4

At line no 6: rel_expression : simple_expression RELOP simple_expression

5%3<4

At line no 6: factor : CONST_INT

8

At line no 6: unary_expression :	factor

8

At line no 6: term :	unary_expression

8

At line no 6: simple_expression : term

8

At line no 6: rel_expression	: simple_expression

8

At line no 6: logic_expression : rel_expression LOGICOP rel_expression

5%3<4&&8

At line no 6: expression : logic_expression

5%3<4&&8

At line no 6: factor : LPAREN expression RPAREN

(5%3<4&&8)

At line no 6: unary_expression :	factor

(5%3<4&&8)

At line no 6: term :	unary_expression

(5%3<4&&8)

At line no 6: simple_expression : simple_expression ADDOP term

2*3+(5%3<4&&8)

At line no 6: rel_expression	: simple_expression

2*3+(5%3<4&&8)

At line no 6: factor : CONST_INT

2

At line no 6: unary_expression :	factor

2

At line no 6: term :	unary_expression

2

At line no 6: simple_expression : term

2

At line no 6: rel_expression	: simple_expression

2

At line no 6: logic_expression : rel_expression LOGICOP rel_expression

2*3+(5%3<4&&8)||2

At line no 6: expression : variable ASSIGNOP logic_expression

j = 2*3+(5%3<4&&8)||2

At line no 6: expression_statement : expression SEMICOLON

j=2*3+(5%3<4&&8)||2;

At line no 6: statement : expression_statement

j=2*3+(5%3<4&&8)||2;

At line no 6: statements : statements statement

int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
 j=2*3+(5%3<4&&8)||2;


At line no. 7: variable : ID
d

At line no 7: factor : CONST_INT

1

At line no 7: unary_expression :	factor

1

At line no 7: term :	unary_expression

1

At line no 7: simple_expression : term

1

At line no 7: rel_expression	: simple_expression

1

At line no 7: logic_expression : rel_expression

1

At line no 7: arguments : logic_expression

1

At line no 7: factor : CONST_INT

2

At line no 7: unary_expression :	factor

2

At line no 7: term :	unary_expression

2

At line no 7: factor : CONST_INT

3

At line no 7: unary_expression :	factor

3

At line no 7: term : term MULOP unary_expression

2*3

At line no 7: simple_expression : term

2*3

At line no 7: rel_expression	: simple_expression

2*3

At line no 7: logic_expression : rel_expression

2*3

At line no 7: arguments : arguments COMMA logic_expression

1 , 2*3

At line no 7: argument_list : arguments

1 , 2*3

At line no 7: factor : ID LPAREN argument_list RPAREN

var(1 , 2*3)

At line no 7: unary_expression :	factor

var(1 , 2*3)

At line no 7: term :	unary_expression

var(1 , 2*3)

At line no 7: simple_expression : term

var(1 , 2*3)

At line no 7: factor : CONST_INT

3.5

At line no 7: unary_expression :	factor

3.5

At line no 7: term :	unary_expression

3.5

At line no 7: factor : CONST_INT

2

At line no 7: unary_expression :	factor

2

At line no 7: term : term MULOP unary_expression

3.5*2

At line no 7: simple_expression : simple_expression ADDOP term

var(1 , 2*3)+3.5*2

At line no 7: rel_expression	: simple_expression

var(1 , 2*3)+3.5*2

At line no 7: logic_expression : rel_expression

var(1 , 2*3)+3.5*2

At line no 7: expression : variable ASSIGNOP logic_expression

d = var(1 , 2*3)+3.5*2

At line no 7: expression_statement : expression SEMICOLON

d=var(1 , 2*3)+3.5*2;

At line no 7: statement : expression_statement

d=var(1 , 2*3)+3.5*2;

At line no 7: statements : statements statement

int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
j=2*3+(5%3<4&&8)||2;
 d=var(1 , 2*3)+3.5*2;


At line no 8: factor : CONST_INT

0

At line no 8: unary_expression :	factor

0

At line no 8: term :	unary_expression

0

At line no 8: simple_expression : term

0

At line no 8: rel_expression	: simple_expression

0

At line no 8: logic_expression : rel_expression

0

At line no 8: expression : logic_expression

0

At line no 8: statement : RETURN expression SEMICOLON

return 0;

At line no 8: statements : statements statement

int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
j=2*3+(5%3<4&&8)||2;
d=var(1 , 2*3)+3.5*2;
 return 0;

At line no 9: compound_statement : LCURL statements RCURL

{
int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
j=2*3+(5%3<4&&8)||2;
d=var(1 , 2*3)+3.5*2;
return 0;
}

ScopeTable # 1.1
7 --> < a : ID >
9 --> < c : ID >
10 --> < d : ID >
15 --> < i : ID >
16 --> < j : ID >

ScopeTable # 1
1 --> < main : ID >

ScopeTable with id 1.1 removed
At line no 9: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
j=2*3+(5%3<4&&8)||2;
d=var(1 , 2*3)+3.5*2;
return 0;
}



At line no: 9: unit : func_definition

int main(){
int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
j=2*3+(5%3<4&&8)||2;
d=var(1 , 2*3)+3.5*2;
return 0;
}




At line no: 9: program : unit

int main(){
int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
j=2*3+(5%3<4&&8)||2;
d=var(1 , 2*3)+3.5*2;
return 0;
}




		Symbol Table : 

ScopeTable # 1
1 --> < main : ID >

Total Lines : 10 

Total Errors : 0 

